<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>{#wce.break_title}</title>
        <script type="text/javascript" src="../../tiny_mce_popup.js"></script>
        <script type="text/javascript" src="../../jquery.js"></script>
        <script type="text/javascript" src="js/wce.js"></script>
    </head>

    <body id="table" style="display: none">
        <form onsubmit="return false;" action="#" name="breakinfo">
            <input type="hidden" id="hasBreak" name="hasBreak" value="no" />
            <fieldset>
                <legend>
                    {#wce.break_data}
                </legend>
                <table border="0" cellpadding="4" cellspacing="0" width="100%">
                    <tr>
                        <td><label id="break_type_label" for="break_type">{#wce.break_type}</label></td>
                        <td colspan="2">
                        <select id="break_type" name="break_type"
                        onchange="checkstatus_break('new')">
                            <option value="lb">{#wce.linebreak}</option>
                            <option value="cb">{#wce.columnbreak}</option>
                            <option value="pb">{#wce.pagebreak}</option>
                            <option value="gb">{#wce.quire}</option>
                        </select></td>
                        <!--<td colspan="5">
                        <input type="checkbox" name="pb_hyphen"
                        id="pb_hyphen" >
                        {#wce.pb_hyphen}</input> </td>-->
                    </tr>
                    <tr>
                        <td><label id="number_label" for="number">{#wce.number}</label></td>
                        <td colspan="2">
                        <input id="number" name="number" type="text" value=""
                        size="10" maxlength="" class="required number min1 mceFocus" />
                        </td>
                        <td><label id="pb_type_label" for="pb_type">{#wce.pb_position}</label></td>
                        <td>
                        <select id="pb_type" name="pb_type">
                            <option value=""></option>
                            <option value="r">{#wce.recto}</option>
                            <option value="v">{#wce.verso}</option>
                        </select></td>
                        <td width=10></td>
                        <td><label id="fibre_type_label" for="fibre_type">{#wce.fibre_type}</label></td>
                        <td>
                        <select id="fibre_type" name="fibre_type">
                            <option value=""></option>
                            <option value="x">{#wce.papyrus_fibre_h}</option>
                            <option value="y">{#wce.papyrus_fibre_v}</option>

                    </tr>
                    <tr>
                        <td colspan="5">
                        <input type="checkbox" name="pb_ghostpage"
                        id="pb_ghostpage" onchange="checkstatus_ghostpage()">
                        {#wce.pb_ghostpage}</input> </td>
                    </tr>
                    <tr>
                        <td><label id="lb_alignment_label" for="lb_alignment">{#wce.alignment}</label></td>
                        <td colspan="2">
                        <select id="lb_alignment" name="lb_alignment">
                            <option value=""></option>
                            <option value="leftJust">{#wce.alignment_lj}</option>
                            <option value="centerJust">{#wce.alignment_cj}</option>
                            <option value="rightJust">{#wce.alignment_rj}</option>
                            <option value="indent">{#wce.alignment_indent}</option>
                            <option value="hang">{#wce.alignment_hanging}</option>
                        </select></td>
                    </tr>

                    <tr>
                        <td><label id="facs_label" for="facs">{#wce.facs}</label></td>
                        <td colspan="6">
                        <input id="facs" name="facs" type="text" value=""
                        size="50" maxlength="" class="required number min1 mceFocus" />
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div class="mceActionPanel">
                <input type="button" id="insert" name="insert" value="{#insert}"
                onclick="var cont = testNumber();
                if (cont){setBreakValue(); writeWceNodeInfo();}else{alert('{#wce.empty_number}');}" />
                <input type="button" id="cancel"  name="cancel" value="{#cancel}"
                onclick="tinyMCEPopup.close();" />
            </div>
        </form>
    </body>
    <script type="text/javascript">
		var qsParm, old_break_type, break_type;
		var break_indention;
		//positon of cursor
		var break_lbpos;

		tinyMCEPopup.onInit.add(function(_ed) {
			ed = _ed;
			setConstants();
			init();
		});

		function init() {
			var v = ed.WCE_VAR;
			qsParm = new Array();
			qsParm['mode'] = add_new_wce_node ? 'new' : '';
			qsParm['quire'] = parseInt(v.qcnt) + 1;
			qsParm['page'] = parseInt(v.pcnt) + 1
			qsParm['column'] = parseInt(v.ccnt) + 1;
			qsParm['line'] = parseInt(v.lcnt) + 1;
			qsParm['rectoverso'] = v.rectoverso;

			comboBindReturnEvent('insert');
			wceInfoInit('brea');
			readWceNodeInfo();
			old_break_type = document.breakinfo.break_type.value;
			//qs();
			if (qsParm['mode'] == 'new') {// first call, no former value
				document.breakinfo.number.value = qsParm['line'];
			} else {// edit mode => number not empty
				switch (old_break_type) {
					case 'gb':
						qsParm['quire'] = document.breakinfo.number.value;
						break;
					case 'pb':
						qsParm['page'] = document.breakinfo.number.value;
						break;
					case 'cb':
						qsParm['column'] = document.breakinfo.number.value;
						break;
					case 'lb':
						qsParm['line'] = document.breakinfo.number.value;
						break;
				}
			}
			checkstatus_break();
			//setstatus_hyphen();
			checkstatus_ghostpage();
		}

		function setBreakValue() {
			break_type = $('#break_type').val();

			if ($('#lb_alignment').val() === "indent")
				break_indention = "&#8594;";
			else if ($('#lb_alignment').val() === "hang")
				break_indention = "&#8592;";
			else
				break_indention = "";

			break_lbpos = wceUtils.modifyBreakPosition(ed);
			
			/*if (!add_new_wce_node) {
				// set hasBreak attribute
				checkstatus_hyphen();
				if ($('#hasBreak').val() == 'yes')
					break_lbpos = 'lbm';
				else
					break_lbpos = '';

			} else {
				break_lbpos = wceUtils.modifyBreakPosition(ed);
				if (break_lbpos == 'lbm') {//lbm
					document.breakinfo.hasBreak.value = 'yes';
				} else {
					document.breakinfo.hasBreak.value = 'no';
				}
			}*/

		}

		function checkstatus_break() {
			if (document.breakinfo.break_type.options[0].selected == true) {//LB
				document.breakinfo.lb_alignment.disabled = false;
				document.getElementById('lb_alignment').style.backgroundColor = "white";
				document.breakinfo.number.value = qsParm['line'];
			} else {
				document.breakinfo.lb_alignment.disabled = true;
				document.getElementById('lb_alignment').style.backgroundColor = "#CCCCCC";
			}
			if (document.breakinfo.break_type.options[1].selected == true) {//CB
				document.breakinfo.number.value = qsParm['column'];
			}
			if (document.breakinfo.break_type.options[2].selected == true) {//PB
				document.breakinfo.pb_type.disabled = false;
				document.getElementById('pb_type').style.backgroundColor = "white";
				document.breakinfo.fibre_type.disabled = false;
				document.getElementById('fibre_type').style.backgroundColor = "white";
				//document.breakinfo.pb_hyphen.disabled = false;
				//document.getElementById('pb_hyphen').style.backgroundColor = "white";
				document.breakinfo.pb_ghostpage.disabled = false;
				document.getElementById('pb_ghostpage').style.backgroundColor = "white";
				document.breakinfo.facs.disabled = false;
				document.getElementById('facs').style.backgroundColor = "white";
				if (qsParm['mode'] == 'new' && qsParm['rectoverso'] == 'true') {//only for new entries; old ones keep their counting
					document.breakinfo.number.value = Math.ceil(qsParm['page'] / 2);
					if (qsParm['page'] % 2 == 0)// verso page
						document.breakinfo.pb_type.options[2].selected = true;
					else// recto page
						document.breakinfo.pb_type.options[1].selected = true;
				} else
					document.breakinfo.number.value = qsParm['page'];
			} else {
				document.breakinfo.pb_type.disabled = true;
				document.getElementById('pb_type').style.backgroundColor = "#CCCCCC";
				document.breakinfo.fibre_type.disabled = true;
				document.getElementById('fibre_type').style.backgroundColor = "#CCCCCC";
				//document.breakinfo.pb_hyphen.disabled = true;
				//document.getElementById('pb_hyphen').style.backgroundColor = "#CCCCCC";
				document.breakinfo.pb_ghostpage.disabled = true;
				document.breakinfo.pb_ghostpage.checked = false;
				document.getElementById('pb_ghostpage').style.backgroundColor = "#CCCCCC";
				document.breakinfo.facs.disabled = true;
				document.getElementById('facs').style.backgroundColor = "#CCCCCC";
			}
			if (document.breakinfo.break_type.options[3].selected == true) {//QB
				document.breakinfo.number.value = qsParm['quire'];
			}

			//only enable edit highest-node of a break-group
			if (wce_node && wce_node.className == 'brea') {
				var bID = wce_node.getAttribute('id');
				if (bID) {
					var bArr = bID.split('_');
					var bt = bArr[0], bc = bArr[1];
					if (bt && bc) {
						var bcInt = parseInt(bc);
						if ((bt == 'pb' && bcInt > 3) || (bt == 'cb' && bcInt > 2) || (bt == 'lb' && bcInt > 1)) {
							$('#break_type').attr('disabled', true);
						}
					}
				}
			}
		}

		/*function checkstatus_hyphen() {
			if (document.breakinfo.pb_hyphen.checked)
				document.breakinfo.hasBreak.value = "yes";
			else
				document.breakinfo.hasBreak.value = "no";
		}*/

		function checkstatus_ghostpage() {
			if (document.breakinfo.pb_ghostpage.checked) {
				document.breakinfo.number.disabled = true;
				document.getElementById('number').style.backgroundColor = "#CCCCCC";
			} else {
				document.breakinfo.number.disabled = false;
				document.getElementById('number').style.backgroundColor = "white";
			}
		}

		/*function setstatus_hyphen() {
			if (document.breakinfo.break_type.options[2].selected == true && document.breakinfo.hasBreak.value == "yes")
				document.breakinfo.pb_hyphen.checked = true;
			else
				document.breakinfo.pb_hyphen.checked = false;
		}*/

		function testNumber() {
			if (document.getElementById('number').value == '' && !document.breakinfo.pb_ghostpage.checked)
				return false;
			return true;
		}

		if (!tinyMCE.isIE) {
			$(document).keydown(function(e) {
				var evt = e || window.event
				if (evt.keyCode == 13 || evt.keyCode == 10) {
					document.getElementById('insert').click();
					return false;
				}
			});
		}
    </script>
</html>
