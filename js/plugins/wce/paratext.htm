<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>{#wce.paratext_title}</title>
<script type="text/javascript" src="../../tiny_mce_popup.js"></script>
<script type="text/javascript" src="../../tiny_mce_src.js"></script>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../rangy-core.js"></script>
<script type="text/javascript" src="js/wce.js"></script>
</head>

<body id="table" style="display: none">
	<form onsubmit="return false;" action="#" name="paratextinfo" onload="setstatus_paratext()">
		<fieldset>
			<legend>{#wce.paratext_data}</legend>
			<table border="0" cellpadding="4" cellspacing="0" width="100%">
				<tr>
					<td><label id="fw_label" for="fw_type">{#wce.paratext}</label>
					</td>
					<td><select id="fw_type" name="fw_type" onchange="checkstatus_typ()">
							<option value="commentary">{#wce.fw_commentary_text}</option>
							<option value="ews">{#wce.fw_ews}</option>
							<option value="runTitle">{#wce.fw_running_title}</option>
							<option value="chapNum">{#wce.fw_chapter_number}</option>
							<option value="chapTitle">{#wce.fw_chapter_title}</option>
							<option value="lectTitle">{#wce.fw_lectionary_title}</option>
							<option value="colophon">{#wce.fw_colophon}</option>
							<option value="quireSig">{#wce.fw_quiresignature}</option>
							<option value="AmmSec">{#wce.fw_ammonian}</option>
							<option value="EusCan">{#wce.fw_eusebian}</option>
							<option value="euthaliana">{#wce.fw_euthaliana}</option>
							<option value="gloss">{#wce.fw_gloss}</option>
							<option value="stichoi">{#wce.fw_stichoi}</option>
							<option value="pageNum">{#wce.fw_pagenumber}</option>
							<option value="other">{#wce.other}</option>
					</select>
					</td>
				</tr>
				<tr>
					<td><label id="covered_label" for="covered">{#wce.covered}</label></td>
					<td><input id="covered" name="covered" type="number" value=""
						size="5" maxlength="" class="required number min1 mceFocus"/></td>
				</tr>
				<tr>
					<td><label id="marginals_text_label" for="marginals_text">{#wce.text}</label></td>
					<!--<td colspan="2"><input id="text" name="text" type="text" value=""
						size=45" maxlength="" class="required number min1 mceFocus" onchange="checkstatus_typ()" /></td>-->
						<td colspan="2"><textarea WRAP="PHYSICAL" ROWS="4" style="width:100%" id="marginals_text" name="marginals_text"></textarea></td>
				</tr>
				<tr>
					<td><label id="number_label" for="number">{#wce.number_attribute}</label></td>
					<td><input id="number" name="number" type="text" value=""
						size=50" maxlength="" class="required number min1 mceFocus" /></td>
					<td><input id="edit_number" name="edit_number" type="checkbox" onchange="checkstatus_number()" checked="checked">{#wce.number_calculate}</input></td>
				</tr>
				<tr>
					<td><label id="paratext_position_label"
						for="paratext_position">{#wce.position}</label>
					</td>
					<td><select id="paratext_position" name="paratext_position" onchange="checkstatus_position()">
							<option value="pagetop">{#wce.position_pagetop}</option>
							<option value="pagebottom">{#wce.position_pagebottom}</option>
							<option value="pageleft">{#wce.position_pageleft}</option>
							<option value="pageright">{#wce.position_pageright}</option>
							<option value="coltop">{#wce.position_coltop}</option>
							<option value="colbottom">{#wce.position_colbottom}</option>
							<option value="colleft">{#wce.position_colleft}</option>
							<option value="colright">{#wce.position_colright}</option>
							<option value="lineleft">{#wce.position_lineleft}</option>
							<option value="lineright">{#wce.position_lineright}</option>
							<option value="above">{#wce.position_above}</option>
							<option value="below">{#wce.position_below}</option>
							<option value="here">{#wce.position_thispoint}</option>
							<option value="overwritten">{#wce.position_overwritten}</option>
							<option value="other">{#wce.other}</option>
					</select>
					</td>
					<td><input id="paratext_position_other"
						name="paratext_position_other" type="text" value="" size="20"
						maxlength="" class="required number min1 mceFocus" />
					</td>
				</tr>
				<tr>
					<td><label id="paratext_alignment_label"
						for="paratext_alignment">{#wce.alignment}</label></td>
					<td><select id="paratext_alignment"
						name="paratext_alignment">
							<option value="left">{#wce.alignment_l}</option>
							<option value="center">{#wce.alignment_c}</option>
							<option value="right">{#wce.alignment_r}</option>
					</select>
					</td>
				</tr>
			</table>
		</fieldset>
		<div class="mceActionPanel">
			<input type="button"  id="insert" name="insert" value="{#insert}"
				onclick="cont = testOther();
						if (cont){writeWceNodeInfo(getParaTag());}else{alert('{#wce.empty_other}');}" />
			<input type="button" id="cancel" name="cancel" value="{#cancel}"
				onclick="tinyMCEPopup.close();" />
		</div>
	</form>
</body>
<script type="text/javascript">
	var marginals_text_editor;
	
	tinyMCEPopup.onInit.add(function(_ed){
		ed=_ed;
		setConstants(); 
		//init();
		marginals_text_editor=new tinymce.Editor('marginals_text',{
			mode : "textareas", 
			theme : "advanced",
			skin: "wce",
			extended_valid_elements:'span[class|wce_orig|style|wce]',
			forced_root_block : false,
			force_br_newlines : true,
			force_p_newlines : false,
			entity_encoding : "raw",
			theme_advanced_path : false,  
			plugins : "wce,pagebreak,style,layer,safari,print,inlinepopups,paste", 
			// Theme options
			theme_advanced_buttons1 : "undo,redo,charmap,|,code,removeformat,|,print,contextmenu,paste,fullscreen,|,breaks,illegible,decoration,abbreviation,punctuation",
			theme_advanced_buttons2 : "",
			theme_advanced_toolbar_location : "top",
			theme_advanced_toolbar_align : "left",
			theme_advanced_statusbar_location : "bottom",
			theme_advanced_resizing : false ,
			setup : function(ed) {
				//ed.onChange.add(saveCurrCorrector);
			}
		});  
	 	marginals_text_editor.render(); 
		marginals_text_editor.onInit.add(init); 
	}); 
	
	function init() {
		comboBindReturnEvent('insert'); 
		wceInfoInit('paratext');
		readWceNodeInfo();
		setstatus_paratext();
	}

	function getParaTag() {
		var v = $('#fw_type').val();
		if (v == 'runTitle' || 'chapTitle' || v == 'lectTitle' || v == 'colophon' || v == 'quireSig' || v == 'euthaliana' || v == 'gloss' || v == 'pageNum' || v == 'elsewhere' || v == 'other')
			return 'fw';
		else if (v == 'commentary')
			return '';
		else
			return 'num';
	}

	function checkstatus_typ() {
		var v = $('#fw_type').val();
		if (v == 'commentary') {
			document.paratextinfo.number.value = '';
			document.paratextinfo.number.disabled = true;
			document.getElementById('number').style.backgroundColor = "#CCCCCC";
			document.paratextinfo.edit_number.checked = "checked";
			document.getElementById('edit_number').disabled = true;
			document.paratextinfo.covered.disabled = false;
			document.getElementById('covered').style.backgroundColor = "white";
			//document.paratextinfo.text.disabled = true;
			//document.getElementById('text').style.backgroundColor = "#CCCCCC";
			$('#marginals_text').attr('disabled', true);
			marginals_text_editor.hide();
			document.paratextinfo.paratext_position.disabled = true;
			document.paratextinfo.paratext_alignment.disabled = true;
		} else if (v == 'ews') {
			document.paratextinfo.number.value = '';
			document.paratextinfo.number.disabled = true;
			document.getElementById('number').style.backgroundColor = "#CCCCCC";
			document.paratextinfo.edit_number.checked = "checked";
			document.getElementById('edit_number').disabled = true;
			document.paratextinfo.covered.disabled = true;
			document.getElementById('covered').style.backgroundColor = "#CCCCCC";
			//document.paratextinfo.text.disabled = true;
			//document.getElementById('text').style.backgroundColor = "#CCCCCC";
			$('#marginals_text').attr('disabled', true);
			marginals_text_editor.show();
			document.paratextinfo.paratext_position.disabled = true;
			document.paratextinfo.paratext_alignment.disabled = true;
		} else if (v == 'runTitle' || v == 'chapTitle' || v == 'lectTitle' || v == 'colophon' || v == 'euthaliana' || v == 'gloss' || v =='pageNum' || v == 'elsewhere' || v == 'other') {
			//don't get a number, only text
			document.paratextinfo.number.value = '';
			document.paratextinfo.number.disabled = true;
			document.getElementById('number').style.backgroundColor = "#CCCCCC";
			document.paratextinfo.edit_number.checked = "checked";
			document.getElementById('edit_number').disabled = true;
			document.paratextinfo.covered.disabled = true;
			document.getElementById('covered').style.backgroundColor = "#CCCCCC";
			//document.paratextinfo.text.disabled = false;
			//document.getElementById('text').style.backgroundColor = "white";
			$('#marginals_text').attr('disabled', false);
			marginals_text_editor.show();
			document.paratextinfo.paratext_position.disabled = false;
			document.paratextinfo.paratext_alignment.disabled = false;
		} else {
			document.getElementById('edit_number').disabled = false;
			if (document.paratextinfo.edit_number.selected == true) {
				document.paratextinfo.number.disabled = true;
				document.getElementById('number').style.backgroundColor = "#CCCCCC";
			} else {
				document.paratextinfo.number.disabled = false;
				document.getElementById('number').style.backgroundColor = "white";
			}
			setnumber();
			document.paratextinfo.covered.disabled = true;
			document.getElementById('covered').style.backgroundColor = "#CCCCCC";
			//document.paratextinfo.text.disabled = false;
			//document.getElementById('text').style.backgroundColor = "white";
			$('#marginals_text').attr('disabled', false);
			marginals_text_editor.show();
			document.paratextinfo.paratext_position.disabled = false;
			document.paratextinfo.paratext_alignment.disabled = false;
		}
	}

	function checkstatus_position() {
		if (document.paratextinfo.paratext_position.options[14].selected == true) {
			document.paratextinfo.paratext_position_other.disabled = false;
			document.getElementById('paratext_position_other').style.backgroundColor = "white";
		} else {
			document.paratextinfo.paratext_position_other.disabled = true;
			document.getElementById('paratext_position_other').style.backgroundColor = "#CCCCCC";
		}
	}
	
	function checkstatus_number() {
		if (document.paratextinfo.edit_number.checked == true) {
			document.paratextinfo.number.disabled = true;
			document.getElementById('number').style.backgroundColor = "#CCCCCC";
			setnumber();
		} else {
			document.paratextinfo.number.disabled = false;
			document.getElementById('number').style.backgroundColor = "white";
		}
	}
	
	function testOther() {
		if (document.paratextinfo.paratext_position.options[14].selected == true && document.getElementById('paratext_position_other').value == '') 
			return false;
	return true;
	}

	function setnumber() {
		var fehler = 0;
		var dezimalz = 0; /* Dezimalzahl */
		var Zeichen = ""; /* Aktuelles Zeichen */
		var Zeichen_Wert = 0; /* Wert fuer Zeichen */
		var Zeichen_Wert_alt = 1000; /* alter Wert fuer Zeichen */

		var eing = document.paratextinfo.marginals_text.value.toUpperCase();
		Pruefen_roemZahl(eing, eing.length);

		if (fehler == 0) {

			for (var i = 0; i < eing.length; i++) {
				Zeichen = eing.charAt(i);
				if (Zeichen == "I")
					Zeichen_Wert = 1;
				else if (Zeichen == "V")
					Zeichen_Wert = 5;
				else if (Zeichen == "X")
					Zeichen_Wert = 10;
				else if (Zeichen == "L")
					Zeichen_Wert = 50;
				else if (Zeichen == "C")
					Zeichen_Wert = 100;
				else if (Zeichen == "D")
					Zeichen_Wert = 500;
				else if (Zeichen == "M")
					Zeichen_Wert = 1000;

				if (Zeichen_Wert_alt < Zeichen_Wert) {
					dezimalz = dezimalz - Zeichen_Wert_alt + (Zeichen_Wert - Zeichen_Wert_alt);
				} else
					dezimalz = dezimalz + Zeichen_Wert;

				Zeichen_Wert_alt = Zeichen_Wert;
			}

			document.paratextinfo.number.value = dezimalz;
			document.paratextinfo.number.disabled = true;
			document.getElementById('number').style.backgroundColor = "#CCCCCC";

		} else {
			document.paratextinfo.number.value = '';
			document.paratextinfo.number.disabled = false;
			document.getElementById('number').style.backgroundColor = "white";
		}
	}

	function Pruefen_roemZahl(Wert, laenge) {
		var Zeichen = "";
		var Zeichen_alt = "";
		var Zeichen_zaehl = 1;
		var Zeichen_Wert = 0;
		var Zeichen_Wert_alt = 1000;
		// flags, ob bereits Symbol verwendet
		var fl_Zeichen_I = 0;
		var fl_Zeichen_V = 0;
		var fl_Zeichen_X = 0;
		var fl_Zeichen_L = 0;
		var fl_Zeichen_C = 0;
		var fl_Zeichen_D = 0;
		var fl_Zeichen_M = 0;
		var anz_Zeichen_I = 0;
		var anz_Zeichen_V = 0;
		var anz_Zeichen_X = 0;
		var anz_Zeichen_L = 0;
		var anz_Zeichen_C = 0;
		var anz_Zeichen_D = 0;
		var anz_Zeichen_M = 0;
		var fl_erster = 0;

		var fehler = 0;
		if (Wert.length != laenge)
			fehler++;
		for (var i = 0; i < Wert.length; i++) {
			Zeichen = Wert.charAt(i);
			if (Zeichen != "I" && Zeichen != "V" && Zeichen != "X" && Zeichen != "L" && Zeichen != "C" && Zeichen != "D" && Zeichen != "M")
				fehler++;

			if (Zeichen == "I") {
				Zeichen_Wert = 1;
				anz_Zeichen_I++;
			} else if (Zeichen == "V") {
				Zeichen_Wert = 5;
				anz_Zeichen_V++;
			} else if (Zeichen == "X") {
				Zeichen_Wert = 10;
				anz_Zeichen_X++;
			} else if (Zeichen == "L") {
				Zeichen_Wert = 50;
				anz_Zeichen_L++;
			} else if (Zeichen == "C") {
				Zeichen_Wert = 100;
				anz_Zeichen_C++;
			} else if (Zeichen == "D") {
				Zeichen_Wert = 500;
				anz_Zeichen_D++;
			} else if (Zeichen == "M") {
				Zeichen_Wert = 1000;
				anz_Zeichen_M++;
			}

			// Pruefung mehr als ein kleineres Zeichen vor groesserem
			if (Zeichen != Zeichen_alt) {
				if (Zeichen_Wert_alt < Zeichen_Wert) {
					if (((i - 2) >= 0) && (Wert.charAt(i - 2) == Zeichen_alt)) {
						fehler++;
					}
				}
			}

			// Pruefung gleiches Zeichen an mehreren Stellen (es wird aber XXXIX = 39 zugelassen)
			if (fl_erster > 0) {
				if (Zeichen != Zeichen_alt) {

					if (Zeichen == "I") {
						if (fl_Zeichen_I == 0 || fl_Zeichen_I == 1)
							fl_Zeichen_I++;
						else
							fehler++;
					}
					if (Zeichen == "V") {
						if (fl_Zeichen_V == 0 || fl_Zeichen_V == 1)
							fl_Zeichen_V++;
						else
							fehler++;
					}
					if (Zeichen == "X") {
						if (fl_Zeichen_X == 0 || fl_Zeichen_X == 1)
							fl_Zeichen_X++;
						else
							fehler++;
					}
					if (Zeichen == "L") {
						if (fl_Zeichen_L == 0 || fl_Zeichen_L == 1)
							fl_Zeichen_L++;
						else
							fehler++;
					}
					if (Zeichen == "C") {
						if (fl_Zeichen_C == 0 || fl_Zeichen_C == 1)
							fl_Zeichen_C++;
						else
							fehler++;
					}
					if (Zeichen == "D") {
						if (fl_Zeichen_D == 0 || fl_Zeichen_D == 1)
							fl_Zeichen_D++;
						else
							fehler++;
					}
					if (Zeichen == "M") {
						if (fl_Zeichen_M == 0 || fl_Zeichen_M == 1)
							fl_Zeichen_M++;
						else
							fehler++;
					}
				}
			} else
				fl_erster = 1;

			// Pruefung mehr als 3 gleiche Zeichen hintereinander
			if (Zeichen == Zeichen_alt) {
				Zeichen_zaehl++;
				//if (Zeichen_zaehl > 3) //Deactivated test, because many manuscripts use IIII etc.
					//fehler++;
			} else {
				Zeichen_zaehl = 1;
			}

			Zeichen_alt = Zeichen;
			Zeichen_Wert_alt = Zeichen_Wert;
		}

		// Pruefung, ob Zeichen zu oft vorkamen
		//if (anz_Zeichen_I > 3 || anz_Zeichen_V > 1 || anz_Zeichen_X > 4 || anz_Zeichen_L > 1 || anz_Zeichen_C > 4 || anz_Zeichen_D > 1 || anz_Zeichen_M > 3) {
		if (anz_Zeichen_V > 1 || anz_Zeichen_X > 4 || anz_Zeichen_L > 1 || anz_Zeichen_C > 4 || anz_Zeichen_D > 1 || anz_Zeichen_M > 3) {
			fehler++;
		}
	}
	function setstatus_paratext() {
		checkstatus_position();
		checkstatus_typ();
		var oldnumber = document.paratextinfo.number.value; // save number
		setnumber();
		document.paratextinfo.number.value = oldnumber; // set former number for editing
	}
	
	if (!tinyMCE.isIE) {
		$(document).keydown(function(e) {
			var evt = e || window.event
			if (evt.keyCode == 13 || evt.keyCode == 10) {
				document.getElementById('insert').click();
				return false;
			}
		});
	}
</script>
</html>