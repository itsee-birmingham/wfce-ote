<!-- 
	Copyright (C) 2012-2016 Trier Center for Digital Humanities, Trier (Germany)
	
	This file is part of the Online Transcription Editor (OTE).

    OTE is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    OTE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with OTE.  If not, see <http://www.gnu.org/licenses/>.

    Diese Datei ist Teil des Online-Transkriptions-Editor (OTE).

    OTE ist Freie Software: Sie können es unter den Bedingungen
    der GNU Lesser General Public License, wie von der Free Software Foundation,
    Version 2.1 der Lizenz oder (nach Ihrer Wahl) jeder späteren
    veröffentlichten Version, weiterverbreiten und/oder modifizieren.

    OTE wird in der Hoffnung, dass es nützlich sein wird, aber
    OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
    Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
    Siehe die GNU Lesser General Public License für weitere Details.

    Sie sollten eine Kopie der GNU Lesser General Public License zusammen mit diesem
    Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title id="break_title">{#break_title}</title>
        <script type="text/javascript" src="../jquery.js"></script>
        <script type="text/javascript" src="js/wce.js"></script>
    </head>

    <body id="table">
        <form onsubmit="return false;" action="#" name="breakinfo">
            <input type="hidden" id="hasBreak" name="hasBreak" value="no" />
            <input type="button" id="help" name="help" value="{#help}"
				onclick="wce_openWindow('docu.htm#breaks')" />
			<fieldset>
                <legend id="break_data">
                    {#break_data}
                </legend>
                <table border="0" cellpadding="4" cellspacing="0" width="100%">
                    <tr>
                        <td><label id="break_type_label" for="break_type">{#break_type}</label></td>
                        <td colspan="2">
                        <select id="break_type" name="break_type"
                        onchange="checkstatus_break('new')">
                            <option value="lb">{#linebreak}</option>
                            <option value="cb">{#columnbreak}</option>
                            <option value="pb">{#pagebreak}</option>
                            <option value="gb">{#quire}</option>
                        </select></td>
                    </tr>
                    <tr>
                        <td><label id="number_label" for="number">{#number}</label></td>
                        <td colspan="2">
                        <input id="number" name="number" type="text" value=""
                        size="10" maxlength="" class="required number min1 mceFocus" />
                        </td>
                        <td><label id="rv_label" for="rv">{#pb_position}</label></td>
                        <td>
                        <select id="rv" name="rv">
                            <option value=""></option>
                            <option value="r">{#page_recto}</option>
                            <option value="v">{#page_verso}</option>
                        </select></td>
                        <td width=10></td>
                        <td><label id="fibre_type_label" for="fibre_type">{#fibre_type}</label></td>
                        <td>
                        <select id="fibre_type" name="fibre_type">
                            <option value=""></option>
                            <option value="x">{#papyrus_fibre_h}</option>
                            <option value="y">{#papyrus_fibre_v}</option>

                    </tr>
                    <tr>
                        <td><label id="lb_alignment_label" for="lb_alignment">{#alignment}</label></td>
                        <td colspan="2">
                        <select id="lb_alignment" name="lb_alignment">
                            <option value=""></option>
                            <option value="leftJust">{#alignment_lj}</option>
                            <option value="centerJust">{#alignment_cj}</option>
                            <option value="rightJust">{#alignment_rj}</option>
                            <option value="indent">{#alignment_indent}</option>
                            <option value="hang">{#alignment_hanging}</option>
                        </select></td>
                    </tr>

                    <tr>
                        <td><label id="facs_label" for="facs">{#facs}</label></td>
                        <td colspan="6">
                        <input id="facs" name="facs" type="text" value=""
                        size="50" maxlength="" class="required number min1 mceFocus" />
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div class="mceActionPanel">
                <input type="button" id="insert" name="insert" value="{#insert}"
                onclick="var cont = true;
                if (cont){setBreakValue(); writeWceNodeInfo();}else{alert('{#empty_number}');}" />
                <input type="button" id="cancel"  name="cancel" value="{#cancel}"
                onclick="parent.tinymce.activeEditor.windowManager.close();" />
			</div>
        </form>
    </body>
    <script type="text/javascript">
		var qsParm, old_break_type, break_type;
		var break_indention;
		//positon of cursor
		var break_lbpos;

		$(document).ready(function() {
			var _ed = parent.tinymce.activeEditor;
			ed = _ed;
			translate();
			setConstants();
			init();
		});


		function translate() {
			var c=document.body.innerHTML;
			var d=document.title;
			var a;
			if(parent.tinymce.isIE){c=c.replace(/ (value|title|alt)=([^"][^\s>]+)/gi,' $1="$2"')}
			a=c.replace(/\{\#([^\}]+)\}/g, function(a, b) {
				var c=parent.tinymce.translate(b);
				return (c != b) ? c : '{#' + b + '}';
			});
			if(a!=c){document.body.innerHTML=a}
			a=d.replace(/\{\#([^\}]+)\}/g, function(a, b) {
				var c=parent.tinymce.translate(b);
				return (c != b) ? c : '{#' + b + '}';
			});
			if(a!=d){document.title=d=a}
		}
		function init() {
			var v = ed.WCE_VAR;
			qsParm = new Array();
			qsParm['mode'] = add_new_wce_node ? 'new' : '';
			qsParm['quire'] = parseInt(v.qcnt) + 1;
			qsParm['page'] = parseInt(v.pcnt) + 1
			qsParm['column'] = parseInt(v.ccnt) + 1;
			//qsParm['line'] = parseInt(v.lcnt) + 1;
			qsParm['rectoverso'] = v.rectoverso;

			comboBindReturnEvent('insert');
			wceInfoInit('brea');
			readWceNodeInfo();
			old_break_type = document.breakinfo.break_type.value;
			//qs();
			if (qsParm['mode'] == 'new') {// first call, no former value
				//document.breakinfo.number.value = qsParm['line'];
			} else {// edit mode => number not empty
				switch (old_break_type) {
					case 'gb':
						qsParm['quire'] = document.breakinfo.number.value;
						break;
					case 'pb':
						qsParm['page'] = document.breakinfo.number.value;
						break;
					case 'cb':
						qsParm['column'] = document.breakinfo.number.value;
						break;
					case 'lb':
						qsParm['line'] = document.breakinfo.number.value;
						break;
				}
			}
			checkstatus_break();
			//setstatus_hyphen();
			//checkstatus_ghostpage();
		}

		function setBreakValue() {
			break_type = $('#break_type').val();

			if ($('#lb_alignment').val() === "indent")
				break_indention = "&#8594;";
			else if ($('#lb_alignment').val() === "hang")
				break_indention = "&#8592;";
			else
				break_indention = "";

			if (!add_new_wce_node) { //edit mode
				// set hasBreak attribute
				// checkstatus_hyphen();
				if ($('#hasBreak').val() == 'yes')
					break_lbpos = 'lbm';
				else
					break_lbpos = '';
			} else {
				break_lbpos = wceUtils.modifyBreakPosition(ed);
				if (break_lbpos == 'lbm') {//lbm
					document.breakinfo.hasBreak.value = 'yes';
				} else {
					document.breakinfo.hasBreak.value = 'no';
				}
			}
		}

		function checkstatus_break() {
			if (document.breakinfo.break_type.options[0].selected == true) {//LB
				document.breakinfo.lb_alignment.disabled = false;
				document.getElementById('lb_alignment').style.backgroundColor = "white";
				//document.breakinfo.number.value = qsParm['line'];
			} else {
				document.breakinfo.lb_alignment.disabled = true;
				document.getElementById('lb_alignment').style.backgroundColor = "#CCCCCC";
			}
			if (document.breakinfo.break_type.options[1].selected == true) {//CB
				document.breakinfo.number.value = qsParm['column'];
			}
			if (document.breakinfo.break_type.options[2].selected == true) {//PB
				document.breakinfo.rv.disabled = false;
				document.getElementById('rv').style.backgroundColor = "white";
				document.breakinfo.fibre_type.disabled = false;
				document.getElementById('fibre_type').style.backgroundColor = "white";
				document.breakinfo.facs.disabled = false;
				document.getElementById('facs').style.backgroundColor = "white";
				if (qsParm['mode'] == 'new' && qsParm['rectoverso'] == 'true') {//only for new entries; old ones keep their counting
					document.breakinfo.number.value = Math.ceil(qsParm['page'] / 2);
					if (qsParm['page'] % 2 == 0)// verso page
						document.breakinfo.rv.options[2].selected = true;
					else// recto page
						document.breakinfo.rv.options[1].selected = true;
				} else
					document.breakinfo.number.value = qsParm['page'];
			} else {
				document.breakinfo.rv.disabled = true;
				document.getElementById('rv').style.backgroundColor = "#CCCCCC";
				document.breakinfo.fibre_type.disabled = true;
				document.getElementById('fibre_type').style.backgroundColor = "#CCCCCC";
				document.breakinfo.facs.disabled = true;
				document.getElementById('facs').style.backgroundColor = "#CCCCCC";
			}
			if (document.breakinfo.break_type.options[3].selected == true) {//QB
				document.breakinfo.number.value = qsParm['quire'];
			}

			//only enable edit highest-node of a break-group
			if (wce_node && $(wce_node).hasClass('brea')) {
				var bID = wce_node.getAttribute('id');
				if (bID) {
					var bArr = bID.split('_');
					var bt = bArr[0], bc = bArr[1];
					if (bt && bc) {
						var bcInt = parseInt(bc);
						if ((bt == 'pb' && bcInt > 3) || (bt == 'cb' && bcInt > 2) || (bt == 'lb' && bcInt > 1)) {
							$('#break_type').attr('disabled', true);
						}
					}
				}
			}
		}

		function testNumber() {
			if (document.getElementById('number').value == '') // && !document.breakinfo.pb_ghostpage.checked)
				return false;
			return true;
		}

		if (!parent.tinymce.isIE) {
			$(document).keydown(function(e) {
				var evt = e || window.event
				if (evt.keyCode == 13 || evt.keyCode == 10) {
					document.getElementById('insert').click();
					return false;
				}
			});
		}
    </script>
</html>
